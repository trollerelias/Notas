{"ast":null,"code":"/*\n    {\n        notes: [],\n        active: null,\n        active: {\n            id: 'KASKLDJALKSDJ129387123',\n            title: '',\n            body: '',\n            imageUrl: '',\n            date: 12387612387126\n        }\n    }\n*/\nimport { types } from '../types/types';\nconst initialState = {\n  notes: [],\n  active: null\n};\nexport const notesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.notesActive:\n      return { ...state,\n        active: { ...action.payload\n        }\n      };\n\n    case types.notesAddNew:\n      return { ...state,\n        notes: [action.payload, ...state.notes]\n      };\n\n    case types.notesLoad:\n      return { ...state,\n        notes: [...action.payload]\n      };\n\n    case types.notesUpdated:\n      return { ...state,\n        notes: state.notes.map(note => note.id === action.payload.id ? action.payload.note : note)\n      };\n\n    case types.notesDelete:\n      return { ...state,\n        active: null,\n        notes: state.notes.filter(note => note.id !== action.payload)\n      };\n\n    case types.notesLogoutCleaning:\n      return { ...state,\n        active: null,\n        notes: []\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/User/OneDrive/Escritorio/react-redux-journal-app-0.21.0/src/reducers/notesReducer.js"],"names":["types","initialState","notes","active","notesReducer","state","action","type","notesActive","payload","notesAddNew","notesLoad","notesUpdated","map","note","id","notesDelete","filter","notesLogoutCleaning"],"mappings":"AAAA;;;;;;;;;;;;;AAcA,SAASA,KAAT,QAAsB,gBAAtB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,MAAM,EAAE;AAFS,CAArB;AAMA,OAAO,MAAMC,YAAY,GAAG,CAAEC,KAAK,GAAGJ,YAAV,EAAwBK,MAAxB,KAAoC;AAE5D,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKP,KAAK,CAACQ,WAAX;AACI,aAAO,EACH,GAAGH,KADA;AAEHF,QAAAA,MAAM,EAAE,EACJ,GAAGG,MAAM,CAACG;AADN;AAFL,OAAP;;AAOJ,SAAMT,KAAK,CAACU,WAAZ;AACI,aAAO,EACH,GAAGL,KADA;AAEHH,QAAAA,KAAK,EAAE,CAAEI,MAAM,CAACG,OAAT,EAAkB,GAAGJ,KAAK,CAACH,KAA3B;AAFJ,OAAP;;AAKJ,SAAKF,KAAK,CAACW,SAAX;AACI,aAAO,EACH,GAAGN,KADA;AAEHH,QAAAA,KAAK,EAAE,CAAE,GAAGI,MAAM,CAACG,OAAZ;AAFJ,OAAP;;AAKJ,SAAKT,KAAK,CAACY,YAAX;AACI,aAAO,EACH,GAAGP,KADA;AAEHH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYW,GAAZ,CACHC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYT,MAAM,CAACG,OAAP,CAAeM,EAA3B,GACFT,MAAM,CAACG,OAAP,CAAeK,IADb,GAEFA,IAHH;AAFJ,OAAP;;AASJ,SAAKd,KAAK,CAACgB,WAAX;AACI,aAAO,EACH,GAAGX,KADA;AAEHF,QAAAA,MAAM,EAAE,IAFL;AAGHD,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYe,MAAZ,CAAoBH,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYT,MAAM,CAACG,OAA/C;AAHJ,OAAP;;AAMJ,SAAKT,KAAK,CAACkB,mBAAX;AACI,aAAO,EACH,GAAGb,KADA;AAEHF,QAAAA,MAAM,EAAE,IAFL;AAGHD,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAMJ;AACI,aAAOG,KAAP;AA/CR;AAmDH,CArDM","sourcesContent":["/*\n    {\n        notes: [],\n        active: null,\n        active: {\n            id: 'KASKLDJALKSDJ129387123',\n            title: '',\n            body: '',\n            imageUrl: '',\n            date: 12387612387126\n        }\n    }\n*/\n\nimport { types } from '../types/types';\n\nconst initialState = {\n    notes: [],\n    active: null\n}\n\n\nexport const notesReducer = ( state = initialState, action ) => {\n\n    switch (action.type) {\n        \n        case types.notesActive:\n            return {\n                ...state,\n                active: {\n                    ...action.payload\n                }\n            }\n        \n        case  types.notesAddNew:\n            return {\n                ...state,\n                notes: [ action.payload, ...state.notes ]\n            }\n\n        case types.notesLoad:\n            return {\n                ...state,\n                notes: [ ...action.payload ]\n            }\n    \n        case types.notesUpdated:\n            return {\n                ...state,\n                notes: state.notes.map(\n                    note => note.id === action.payload.id\n                        ? action.payload.note\n                        : note\n                )\n            }\n\n        case types.notesDelete:\n            return {\n                ...state,\n                active: null,\n                notes: state.notes.filter( note => note.id !== action.payload )\n            } \n\n        case types.notesLogoutCleaning:\n            return {\n                ...state,\n                active: null,\n                notes: []\n            }\n\n        default:\n            return state\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}