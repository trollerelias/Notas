{"ast":null,"code":"import Swal from 'sweetalert2';\nimport { db } from '../firebase/firebase-config';\nimport { types } from '../types/types';\nimport { loadNotes } from '../helpers/loadNotes';\nimport { fileUpload } from '../helpers/fileUpload';\nexport const startNewNote = () => {\n  return async (dispatch, getState) => {\n    const {\n      uid\n    } = getState().auth;\n    const newNote = {\n      title: '',\n      body: '',\n      date: new Date().getTime()\n    };\n\n    try {\n      const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\n      dispatch(activeNote(doc.id, newNote));\n      dispatch(addNewNote(doc.id, newNote));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const activeNote = (id, note) => ({\n  type: types.notesActive,\n  payload: {\n    id,\n    ...note\n  }\n});\nexport const addNewNote = (id, note) => ({\n  type: types.notesAddNew,\n  payload: {\n    id,\n    ...note\n  }\n});\nexport const startLoadingNotes = uid => {\n  return async dispatch => {\n    const notes = await loadNotes(uid);\n    dispatch(setNotes(notes));\n  };\n};\nexport const setNotes = notes => ({\n  type: types.notesLoad,\n  payload: notes\n});\nexport const startSaveNote = note => {\n  return async (dispatch, getState) => {\n    const {\n      uid\n    } = getState().auth;\n\n    if (!note.url) {\n      delete note.url;\n    }\n\n    const noteToFirestore = { ...note\n    };\n    delete noteToFirestore.id;\n    await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\n    dispatch(refreshNote(note.id, noteToFirestore));\n    Swal.fire('Saved', note.title, 'success');\n  };\n};\nexport const refreshNote = (id, note) => ({\n  type: types.notesUpdated,\n  payload: {\n    id,\n    note: {\n      id,\n      ...note\n    }\n  }\n});\nexport const startUploading = file => {\n  return async (dispatch, getState) => {\n    const {\n      active: activeNote\n    } = getState().notes;\n    Swal.fire({\n      title: 'Uploading...',\n      text: 'Please wait...',\n      allowOutsideClick: false,\n      onBeforeOpen: () => {\n        Swal.showLoading();\n      }\n    });\n    const fileUrl = await fileUpload(file);\n    activeNote.url = fileUrl;\n    dispatch(startSaveNote(activeNote));\n    Swal.close();\n  };\n};\nexport const startDeleting = id => {\n  return async (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    await db.doc(`${uid}/journal/notes/${id}`).delete();\n    dispatch(deleteNote(id));\n  };\n};\nexport const deleteNote = id => ({\n  type: types.notesDelete,\n  payload: id\n});\nexport const noteLogout = () => ({\n  type: types.notesLogoutCleaning\n});","map":{"version":3,"sources":["C:/trabajo/Notas/src/actions/notes.js"],"names":["Swal","db","types","loadNotes","fileUpload","startNewNote","dispatch","getState","uid","auth","newNote","title","body","date","Date","getTime","doc","collection","add","activeNote","id","addNewNote","error","console","log","note","type","notesActive","payload","notesAddNew","startLoadingNotes","notes","setNotes","notesLoad","startSaveNote","url","noteToFirestore","update","refreshNote","fire","notesUpdated","startUploading","file","active","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startDeleting","delete","deleteNote","notesDelete","noteLogout","notesLogoutCleaning"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,aAAjB;AAEA,SAASC,EAAT,QAAmB,6BAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,UAAT,QAA2B,uBAA3B;AAGA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC9B,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA+B;AAElC,UAAM;AAAEC,MAAAA;AAAF,QAAUD,QAAQ,GAAGE,IAA3B;AAEA,UAAMC,OAAO,GAAG;AACZC,MAAAA,KAAK,EAAE,EADK;AAEZC,MAAAA,IAAI,EAAE,EAFM;AAGZC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,OAAX;AAHM,KAAhB;;AAMA,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMf,EAAE,CAACgB,UAAH,CAAe,GAAGT,GAAK,gBAAvB,EAAwCU,GAAxC,CAA6CR,OAA7C,CAAlB;AAEAJ,MAAAA,QAAQ,CAAEa,UAAU,CAAEH,GAAG,CAACI,EAAN,EAAUV,OAAV,CAAZ,CAAR;AACAJ,MAAAA,QAAQ,CAAEe,UAAU,CAAEL,GAAG,CAACI,EAAN,EAAUV,OAAV,CAAZ,CAAR;AAEH,KAND,CAME,OAAOY,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AAGJ,GArBD;AAsBH,CAvBM;AAyBP,OAAO,MAAMH,UAAU,GAAG,CAAEC,EAAF,EAAMK,IAAN,MAAiB;AACvCC,EAAAA,IAAI,EAAExB,KAAK,CAACyB,WAD2B;AAEvCC,EAAAA,OAAO,EAAE;AACLR,IAAAA,EADK;AAEL,OAAGK;AAFE;AAF8B,CAAjB,CAAnB;AAQP,OAAO,MAAMJ,UAAU,GAAG,CAAED,EAAF,EAAMK,IAAN,MAAiB;AACvCC,EAAAA,IAAI,EAAExB,KAAK,CAAC2B,WAD2B;AAEvCD,EAAAA,OAAO,EAAE;AACLR,IAAAA,EADK;AACD,OAAGK;AADF;AAF8B,CAAjB,CAAnB;AAQP,OAAO,MAAMK,iBAAiB,GAAKtB,GAAF,IAAW;AACxC,SAAO,MAAOF,QAAP,IAAqB;AAExB,UAAMyB,KAAK,GAAG,MAAM5B,SAAS,CAAEK,GAAF,CAA7B;AACAF,IAAAA,QAAQ,CAAE0B,QAAQ,CAAED,KAAF,CAAV,CAAR;AAEH,GALD;AAMH,CAPM;AAUP,OAAO,MAAMC,QAAQ,GAAKD,KAAF,KAAc;AAClCL,EAAAA,IAAI,EAAExB,KAAK,CAAC+B,SADsB;AAElCL,EAAAA,OAAO,EAAEG;AAFyB,CAAd,CAAjB;AAMP,OAAO,MAAMG,aAAa,GAAKT,IAAF,IAAY;AACrC,SAAO,OAAOnB,QAAP,EAAiBC,QAAjB,KAA+B;AAElC,UAAM;AAAEC,MAAAA;AAAF,QAAUD,QAAQ,GAAGE,IAA3B;;AAEA,QAAK,CAACgB,IAAI,CAACU,GAAX,EAAgB;AACZ,aAAOV,IAAI,CAACU,GAAZ;AACH;;AAED,UAAMC,eAAe,GAAG,EAAE,GAAGX;AAAL,KAAxB;AACA,WAAOW,eAAe,CAAChB,EAAvB;AAEA,UAAMnB,EAAE,CAACe,GAAH,CAAQ,GAAGR,GAAK,kBAAkBiB,IAAI,CAACL,EAAI,EAA3C,EAA8CiB,MAA9C,CAAsDD,eAAtD,CAAN;AAEA9B,IAAAA,QAAQ,CAAEgC,WAAW,CAAEb,IAAI,CAACL,EAAP,EAAWgB,eAAX,CAAb,CAAR;AACApC,IAAAA,IAAI,CAACuC,IAAL,CAAU,OAAV,EAAmBd,IAAI,CAACd,KAAxB,EAA+B,SAA/B;AACH,GAfD;AAgBH,CAjBM;AAmBP,OAAO,MAAM2B,WAAW,GAAG,CAAElB,EAAF,EAAMK,IAAN,MAAiB;AACxCC,EAAAA,IAAI,EAAExB,KAAK,CAACsC,YAD4B;AAExCZ,EAAAA,OAAO,EAAE;AACLR,IAAAA,EADK;AAELK,IAAAA,IAAI,EAAE;AACFL,MAAAA,EADE;AAEF,SAAGK;AAFD;AAFD;AAF+B,CAAjB,CAApB;AAYP,OAAO,MAAMgB,cAAc,GAAKC,IAAF,IAAY;AACtC,SAAO,OAAOpC,QAAP,EAAiBC,QAAjB,KAA+B;AAElC,UAAM;AAAEoC,MAAAA,MAAM,EAACxB;AAAT,QAAwBZ,QAAQ,GAAGwB,KAAzC;AAEA/B,IAAAA,IAAI,CAACuC,IAAL,CAAU;AACN5B,MAAAA,KAAK,EAAE,cADD;AAENiC,MAAAA,IAAI,EAAE,gBAFA;AAGNC,MAAAA,iBAAiB,EAAE,KAHb;AAINC,MAAAA,YAAY,EAAE,MAAM;AAChB9C,QAAAA,IAAI,CAAC+C,WAAL;AACH;AANK,KAAV;AASA,UAAMC,OAAO,GAAG,MAAM5C,UAAU,CAAEsC,IAAF,CAAhC;AACAvB,IAAAA,UAAU,CAACgB,GAAX,GAAiBa,OAAjB;AAEA1C,IAAAA,QAAQ,CAAE4B,aAAa,CAAEf,UAAF,CAAf,CAAR;AAGAnB,IAAAA,IAAI,CAACiD,KAAL;AACH,GApBD;AAqBH,CAtBM;AAyBP,OAAO,MAAMC,aAAa,GAAK9B,EAAF,IAAU;AACnC,SAAO,OAAOd,QAAP,EAAiBC,QAAjB,KAA+B;AAElC,UAAMC,GAAG,GAAGD,QAAQ,GAAGE,IAAX,CAAgBD,GAA5B;AACA,UAAMP,EAAE,CAACe,GAAH,CAAQ,GAAGR,GAAK,kBAAkBY,EAAI,EAAtC,EAAyC+B,MAAzC,EAAN;AAEA7C,IAAAA,QAAQ,CAAE8C,UAAU,CAAChC,EAAD,CAAZ,CAAR;AAEH,GAPD;AAQH,CATM;AAWP,OAAO,MAAMgC,UAAU,GAAIhC,EAAD,KAAS;AAC/BM,EAAAA,IAAI,EAAExB,KAAK,CAACmD,WADmB;AAE/BzB,EAAAA,OAAO,EAAER;AAFsB,CAAT,CAAnB;AAMP,OAAO,MAAMkC,UAAU,GAAG,OAAO;AAC7B5B,EAAAA,IAAI,EAAExB,KAAK,CAACqD;AADiB,CAAP,CAAnB","sourcesContent":["import Swal from 'sweetalert2';\n\nimport { db } from '../firebase/firebase-config';\nimport { types } from '../types/types';\nimport { loadNotes } from '../helpers/loadNotes';\nimport { fileUpload } from '../helpers/fileUpload';\n\n\nexport const startNewNote = () => {\n    return async( dispatch, getState ) => {\n\n        const { uid } = getState().auth;\n        \n        const newNote = {\n            title: '',\n            body: '',\n            date: new Date().getTime()\n        }\n\n        try {\n            const doc = await db.collection(`${ uid }/journal/notes`).add( newNote );\n    \n            dispatch( activeNote( doc.id, newNote ) );\n            dispatch( addNewNote( doc.id, newNote ) );\n            \n        } catch (error) {\n            console.log(error);\n        }\n\n\n    }\n}\n\nexport const activeNote = ( id, note ) => ({\n    type: types.notesActive,\n    payload: {\n        id,\n        ...note\n    }\n});\n\nexport const addNewNote = ( id, note ) => ({\n    type: types.notesAddNew,\n    payload: {\n        id, ...note\n    }\n})\n\n\nexport const startLoadingNotes = ( uid ) => {\n    return async( dispatch ) => {\n        \n        const notes = await loadNotes( uid );\n        dispatch( setNotes( notes ) );\n\n    }\n}\n\n\nexport const setNotes = ( notes ) => ({\n    type: types.notesLoad,\n    payload: notes\n});\n\n\nexport const startSaveNote = ( note ) => {\n    return async( dispatch, getState ) => {\n\n        const { uid } = getState().auth;\n\n        if ( !note.url ){\n            delete note.url;\n        }\n\n        const noteToFirestore = { ...note };\n        delete noteToFirestore.id;\n\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update( noteToFirestore );\n\n        dispatch( refreshNote( note.id, noteToFirestore ) );\n        Swal.fire('Saved', note.title, 'success');\n    }\n}\n\nexport const refreshNote = ( id, note ) => ({\n    type: types.notesUpdated,\n    payload: {\n        id,\n        note: {\n            id,\n            ...note\n        }\n    }\n});\n\n\nexport const startUploading = ( file ) => {\n    return async( dispatch, getState ) => {\n\n        const { active:activeNote } = getState().notes;\n\n        Swal.fire({\n            title: 'Uploading...',\n            text: 'Please wait...',\n            allowOutsideClick: false,\n            onBeforeOpen: () => {\n                Swal.showLoading();\n            }\n        });\n\n        const fileUrl = await fileUpload( file );\n        activeNote.url = fileUrl;\n\n        dispatch( startSaveNote( activeNote ) )\n        \n\n        Swal.close();\n    }\n}\n\n\nexport const startDeleting = ( id ) => {\n    return async( dispatch, getState ) => {\n         \n        const uid = getState().auth.uid;\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\n\n        dispatch( deleteNote(id) );\n\n    }\n}\n\nexport const deleteNote = (id) => ({\n    type: types.notesDelete,\n    payload: id\n});\n\n\nexport const noteLogout = () => ({\n    type: types.notesLogoutCleaning\n});\n"]},"metadata":{},"sourceType":"module"}