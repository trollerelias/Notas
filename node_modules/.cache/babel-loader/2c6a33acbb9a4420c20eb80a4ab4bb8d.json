{"ast":null,"code":"var _jsxFileName = \"C:\\\\trabajo\\\\react-redux-journal-app-0.21.0\\\\src\\\\components\\\\notes\\\\NoteScreen.js\";\nimport React, { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NotesAppBar } from './NotesAppBar';\nimport { useForm } from '../../hooks/useForm';\nimport { activeNote, startDeleting } from '../../actions/notes';\nexport const NoteScreen = () => {\n  const dispatch = useDispatch();\n  const {\n    active: note\n  } = useSelector(state => state.notes);\n  const [formValues, handleInputChange, reset] = useForm(note);\n  const {\n    body,\n    title,\n    id\n  } = formValues;\n  const activeId = useRef(note.id);\n  useEffect(() => {\n    if (note.id !== activeId.current) {\n      reset(note);\n      activeId.current = note.id;\n    }\n  }, [note, reset]);\n  useEffect(() => {\n    dispatch(activeNote(formValues.id, { ...formValues\n    }));\n  }, [formValues, dispatch]);\n\n  const handleDelete = () => {\n    dispatch(startDeleting(id));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notes__main-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NotesAppBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notes__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Some awesome title\",\n    className: \"notes__title-input\",\n    autoComplete: \"off\",\n    name: \"title\",\n    value: title,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"What happened today\",\n    className: \"notes__textarea\",\n    name: \"body\",\n    value: body,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), note.url && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notes__image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: note.url,\n    alt: \"imagen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Eliminar Nota\"));\n};","map":{"version":3,"sources":["C:/trabajo/react-redux-journal-app-0.21.0/src/components/notes/NoteScreen.js"],"names":["React","useEffect","useRef","useSelector","useDispatch","NotesAppBar","useForm","activeNote","startDeleting","NoteScreen","dispatch","active","note","state","notes","formValues","handleInputChange","reset","body","title","id","activeId","current","handleDelete","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,qBAA1C;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAE5B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAM;AAAEO,IAAAA,MAAM,EAACC;AAAT,MAAkBT,WAAW,CAAEU,KAAK,IAAIA,KAAK,CAACC,KAAjB,CAAnC;AACA,QAAM,CAAEC,UAAF,EAAcC,iBAAd,EAAiCC,KAAjC,IAA2CX,OAAO,CAAEM,IAAF,CAAxD;AACA,QAAM;AAAEM,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAAsBL,UAA5B;AAEA,QAAMM,QAAQ,GAAGnB,MAAM,CAAEU,IAAI,CAACQ,EAAP,CAAvB;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAKW,IAAI,CAACQ,EAAL,KAAYC,QAAQ,CAACC,OAA1B,EAAoC;AAChCL,MAAAA,KAAK,CAAEL,IAAF,CAAL;AACAS,MAAAA,QAAQ,CAACC,OAAT,GAAmBV,IAAI,CAACQ,EAAxB;AACH;AAEJ,GAPQ,EAON,CAACR,IAAD,EAAOK,KAAP,CAPM,CAAT;AASAhB,EAAAA,SAAS,CAAC,MAAM;AAEZS,IAAAA,QAAQ,CAAEH,UAAU,CAAEQ,UAAU,CAACK,EAAb,EAAiB,EAAE,GAAGL;AAAL,KAAjB,CAAZ,CAAR;AAEH,GAJQ,EAIN,CAACA,UAAD,EAAaL,QAAb,CAJM,CAAT;;AAOA,QAAMa,YAAY,GAAG,MAAM;AACvBb,IAAAA,QAAQ,CAAEF,aAAa,CAAEY,EAAF,CAAf,CAAR;AACH,GAFD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAII;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,oBAFhB;AAGI,IAAA,SAAS,EAAC,oBAHd;AAII,IAAA,YAAY,EAAC,KAJjB;AAKI,IAAA,IAAI,EAAC,OALT;AAMI,IAAA,KAAK,EAAGD,KANZ;AAOI,IAAA,QAAQ,EAAGH,iBAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAYI;AACI,IAAA,WAAW,EAAC,qBADhB;AAEI,IAAA,SAAS,EAAC,iBAFd;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,KAAK,EAAGE,IAJZ;AAKI,IAAA,QAAQ,EAAGF,iBALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAqBSJ,IAAI,CAACY,GAAN,iBAEI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,GAAG,EAAGZ,IAAI,CAACY,GADf;AAEI,IAAA,GAAG,EAAC,QAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAvBZ,CAJJ,eAwCI;AACI,IAAA,SAAS,EAAC,gBADd;AAEI,IAAA,OAAO,EAAGD,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAxCJ,CADJ;AAkDH,CAjFM","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { NotesAppBar } from './NotesAppBar';\nimport { useForm } from '../../hooks/useForm';\nimport { activeNote, startDeleting } from '../../actions/notes';\n\nexport const NoteScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { active:note } = useSelector( state => state.notes );\n    const [ formValues, handleInputChange, reset ] = useForm( note );\n    const { body, title, id } = formValues;\n\n    const activeId = useRef( note.id );\n\n    useEffect(() => {\n        \n        if ( note.id !== activeId.current ) {\n            reset( note );\n            activeId.current = note.id\n        }\n\n    }, [note, reset])\n\n    useEffect(() => {\n        \n        dispatch( activeNote( formValues.id, { ...formValues } ) );\n\n    }, [formValues, dispatch])\n\n\n    const handleDelete = () => {\n        dispatch( startDeleting( id ) );\n    }\n\n\n    return (\n        <div className=\"notes__main-content\">\n            \n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    name=\"title\"\n                    value={ title }\n                    onChange={ handleInputChange }\n                />\n\n                <textarea\n                    placeholder=\"What happened today\"\n                    className=\"notes__textarea\"\n                    name=\"body\"\n                    value={ body }\n                    onChange={ handleInputChange }\n                ></textarea>\n\n                {\n                    (note.url) \n                    && (\n                        <div className=\"notes__image\">\n                            <img \n                                src={ note.url }\n                                alt=\"imagen\"\n                            />\n                        </div>\n                    )\n                }\n\n\n            </div>\n\n\n            <button \n                className=\"btn btn-danger\"\n                onClick={ handleDelete }\n            >\n                Eliminar Nota\n            </button>\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}