{"ast":null,"code":"var _jsxFileName = \"C:\\\\trabajo\\\\react-redux-journal-app-0.21.0\\\\src\\\\routers\\\\AppRouter.js\";\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { firebase } from '../firebase/firebase-config';\nimport { AuthRouter } from './AuthRouter';\nimport { PrivateRoute } from './PrivateRoute';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { login } from '../actions/auth';\nimport { PublicRoute } from './PublicRoute';\nimport { startLoadingNotes } from '../actions/notes';\nexport const AppRouter = () => {\n  const dispatch = useDispatch();\n  const [checking, setChecking] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(async user => {\n      if (user === null || user === void 0 ? void 0 : user.uid) {\n        dispatch(login(user.uid, user.displayName));\n        setIsLoggedIn(true);\n        dispatch(startLoadingNotes(user.uid));\n      } else {\n        setIsLoggedIn(false);\n      }\n\n      setChecking(false);\n    });\n  }, [dispatch, setChecking, setIsLoggedIn]);\n\n  if (checking) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \"Wait...\");\n  }\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PublicRoute, {\n    path: \"/auth\",\n    component: AuthRouter,\n    isAuthenticated: isLoggedIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(PrivateRoute, {\n    exact: true,\n    isAuthenticated: isLoggedIn,\n    path: \"/\",\n    component: JournalScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/auth/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }))));\n};","map":{"version":3,"sources":["C:/trabajo/react-redux-journal-app-0.21.0/src/routers/AppRouter.js"],"names":["React","useEffect","useState","BrowserRouter","Router","Switch","Redirect","useDispatch","firebase","AuthRouter","PrivateRoute","JournalScreen","login","PublicRoute","startLoadingNotes","AppRouter","dispatch","checking","setChecking","isLoggedIn","setIsLoggedIn","auth","onAuthStateChanged","user","uid","displayName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,MAFJ,EAGIC,QAHJ,QAIS,kBAJT;AAMA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,SAASC,aAAT,QAA8B,qCAA9B;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAE3B,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAM,CAAEU,QAAF,EAAYC,WAAZ,IAA4BhB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAAEiB,UAAF,EAAcC,aAAd,IAAgClB,QAAQ,CAAC,KAAD,CAA9C;AAIAD,EAAAA,SAAS,CAAC,MAAM;AAEZO,IAAAA,QAAQ,CAACa,IAAT,GAAgBC,kBAAhB,CAAoC,MAAMC,IAAN,IAAe;AAE/C,UAAKA,IAAL,aAAKA,IAAL,uBAAKA,IAAI,CAAEC,GAAX,EAAiB;AACbR,QAAAA,QAAQ,CAAEJ,KAAK,CAAEW,IAAI,CAACC,GAAP,EAAYD,IAAI,CAACE,WAAjB,CAAP,CAAR;AACAL,QAAAA,aAAa,CAAE,IAAF,CAAb;AACAJ,QAAAA,QAAQ,CAAEF,iBAAiB,CAAES,IAAI,CAACC,GAAP,CAAnB,CAAR;AAEH,OALD,MAKO;AACHJ,QAAAA,aAAa,CAAE,KAAF,CAAb;AACH;;AAEDF,MAAAA,WAAW,CAAC,KAAD,CAAX;AAEH,KAbD;AAeH,GAjBQ,EAiBN,CAAEF,QAAF,EAAYE,WAAZ,EAAyBE,aAAzB,CAjBM,CAAT;;AAoBA,MAAKH,QAAL,EAAgB;AACZ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ;AAGH;;AAGD,sBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,SAAS,EAAGR,UAFhB;AAGI,IAAA,eAAe,EAAGU,UAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAOI,oBAAC,YAAD;AACI,IAAA,KAAK,MADT;AAEI,IAAA,eAAe,EAAGA,UAFtB;AAGI,IAAA,IAAI,EAAC,GAHT;AAII,IAAA,SAAS,EAAGR,aAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,eAcI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,CADJ,CADJ,CADJ;AAwBH,CA5DM","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\n\nimport { useDispatch } from 'react-redux';\n\nimport { firebase } from '../firebase/firebase-config'\nimport { AuthRouter } from './AuthRouter';\nimport { PrivateRoute } from './PrivateRoute';\n\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { login } from '../actions/auth';\nimport { PublicRoute } from './PublicRoute';\nimport { startLoadingNotes } from '../actions/notes';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const [ checking, setChecking ] = useState(true);\n    const [ isLoggedIn, setIsLoggedIn ] = useState(false);\n\n\n\n    useEffect(() => {\n        \n        firebase.auth().onAuthStateChanged( async(user) => {\n\n            if ( user?.uid ) {\n                dispatch( login( user.uid, user.displayName ) );\n                setIsLoggedIn( true );\n                dispatch( startLoadingNotes( user.uid ) );\n\n            } else {\n                setIsLoggedIn( false );\n            }\n\n            setChecking(false);\n\n        });\n        \n    }, [ dispatch, setChecking, setIsLoggedIn ])\n\n\n    if ( checking ) {\n        return (\n            <h1>Wait...</h1>\n        )\n    }\n\n    \n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute \n                        path=\"/auth\"\n                        component={ AuthRouter }\n                        isAuthenticated={ isLoggedIn }\n                    />\n\n                    <PrivateRoute \n                        exact\n                        isAuthenticated={ isLoggedIn }\n                        path=\"/\"\n                        component={ JournalScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}